// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/aggregated-control-strength": {
            "get": {
                "description": "Retrieve aggregated control strength for all threat events",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Control"
                ],
                "summary": "{WIP} Retrieve Aggregated Control Strength",
                "responses": {
                    "200": {
                        "description": "List of Aggregated Control Strength",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.AggregatedStrength"
                            }
                        }
                    }
                }
            }
        },
        "/api/all-catalogue": {
            "get": {
                "description": "Retrieve all Event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "2 - Catalogue"
                ],
                "summary": "Retrieve All Catalogue",
                "responses": {
                    "200": {
                        "description": "List of All Event",
                        "schema": {
                            "$ref": "#/definitions/db.ThreatEventCatalog"
                        }
                    }
                }
            }
        },
        "/api/all-control": {
            "get": {
                "description": "Retrieve all Event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "7 - Control"
                ],
                "summary": "Retrieve All Control",
                "responses": {
                    "200": {
                        "description": "List of All Event",
                        "schema": {
                            "$ref": "#/definitions/db.ControlLibrary"
                        }
                    }
                }
            }
        },
        "/api/all-event": {
            "get": {
                "description": "Event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "4 - Event"
                ],
                "summary": "Event",
                "responses": {
                    "200": {
                        "description": "Your Frequency is by add",
                        "schema": {
                            "$ref": "#/definitions/db.ThreatEventAssets"
                        }
                    }
                }
            }
        },
        "/api/all-frequency": {
            "get": {
                "description": "Retrieve all Event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "3 - Frequency"
                ],
                "summary": "Retrieve All Frequency",
                "responses": {
                    "200": {
                        "description": "List of All Frequency",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Frequency"
                            }
                        }
                    }
                }
            }
        },
        "/api/all-implementation": {
            "get": {
                "description": "Retrieve all Implementation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "8 - Implementation"
                ],
                "summary": "Retrieve All Implementation",
                "responses": {
                    "200": {
                        "description": "List of All Implementation",
                        "schema": {
                            "$ref": "#/definitions/db.ControlLibrary"
                        }
                    }
                }
            }
        },
        "/api/all-proposed": {
            "get": {
                "description": "Retrieve all Control Proposed",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Control"
                ],
                "summary": "{WIP} Retrieve All Control Proposed",
                "responses": {
                    "200": {
                        "description": "List of All Control Strength",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Propused"
                            }
                        }
                    }
                }
            }
        },
        "/api/all-strength": {
            "get": {
                "description": "Retrieve all Control Strength",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Control"
                ],
                "summary": "{WIP} Retrieve All Control Strength",
                "responses": {
                    "200": {
                        "description": "List of All Control Strength",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Control"
                            }
                        }
                    }
                }
            }
        },
        "/api/asset/{id}": {
            "get": {
                "description": "Retrieve an asset by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "1 - Inventory"
                ],
                "summary": "Retrieve Asset by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Asset ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Asset Details",
                        "schema": {
                            "$ref": "#/definitions/db.AssetInventory"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing Asset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "1 - Inventory"
                ],
                "summary": "Update Asset",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Asset ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Data to update Asset",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/interfaces.InputAssetsInventory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Asset Updated",
                        "schema": {
                            "$ref": "#/definitions/db.AssetInventory"
                        }
                    }
                }
            }
        },
        "/api/assets": {
            "get": {
                "description": "Retrieve all assets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "1 - Inventory"
                ],
                "summary": "Retrieve All Assets",
                "responses": {
                    "200": {
                        "description": "List of All Assets",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.AssetInventory"
                            }
                        }
                    }
                }
            }
        },
        "/api/catalogue": {
            "post": {
                "description": "Create New Event Catalogue",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "2 - Catalogue"
                ],
                "summary": "{WIP} Create New Catalogue",
                "parameters": [
                    {
                        "description": "Data for create new Event",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/interfaces.InputThreatEventCatalogue"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of All Events catalogues",
                        "schema": {
                            "$ref": "#/definitions/db.ThreatEventCatalog"
                        }
                    }
                }
            }
        },
        "/api/catalogue/{id}": {
            "get": {
                "description": "Retrieve an Event by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "2 - Catalogue"
                ],
                "summary": "Retrieve Catalogue by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event Details",
                        "schema": {
                            "$ref": "#/definitions/db.ThreatEventCatalog"
                        }
                    }
                }
            }
        },
        "/api/control": {
            "post": {
                "description": "Create New Event Control",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "7 - Control"
                ],
                "summary": "Create New Control",
                "parameters": [
                    {
                        "description": "Data for create new Control",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/interfaces.InputControlLibrary"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of All Controls",
                        "schema": {
                            "$ref": "#/definitions/db.ControlLibrary"
                        }
                    }
                }
            }
        },
        "/api/control/{id}": {
            "get": {
                "description": "Retrieve an Event by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "7 - Control"
                ],
                "summary": "Retrieve Control by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event Details",
                        "schema": {
                            "$ref": "#/definitions/db.ControlLibrary"
                        }
                    }
                }
            }
        },
        "/api/create-Risk": {
            "post": {
                "description": "Create new Risk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "6 - Risk"
                ],
                "summary": "{WIP} Create Risk",
                "responses": {
                    "200": {
                        "description": "Risk Create",
                        "schema": {
                            "$ref": "#/definitions/db.RiskCalculation"
                        }
                    }
                }
            }
        },
        "/api/create-asset": {
            "post": {
                "description": "Create new Asset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "1 - Inventory"
                ],
                "summary": "Create Asset",
                "parameters": [
                    {
                        "description": "Data for create new Asset",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/interfaces.InputAssetsInventory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Asset Create",
                        "schema": {
                            "$ref": "#/definitions/db.AssetInventory"
                        }
                    }
                }
            }
        },
        "/api/create-losshigh": {
            "post": {
                "description": "Create new LossHigh",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "5 - Loss-High"
                ],
                "summary": "Create LossHigh",
                "parameters": [
                    {
                        "description": "Data for create new LossHigh",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.LossHigh"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "LossHigh Create",
                        "schema": {
                            "$ref": "#/definitions/db.LossHigh"
                        }
                    }
                }
            }
        },
        "/api/create-revelance": {
            "post": {
                "description": "Create new Relevance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "9 - Revelance"
                ],
                "summary": "Create Relevance",
                "parameters": [
                    {
                        "description": "Data for create new Relevance",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.Relevance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Relevance Create",
                        "schema": {
                            "$ref": "#/definitions/db.Relevance"
                        }
                    }
                }
            }
        },
        "/api/event": {
            "post": {
                "description": "Create Event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "4 - Event"
                ],
                "summary": "Create Event",
                "parameters": [
                    {
                        "description": "Data for create new Event",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.ThreatEventAssets"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event created successfully",
                        "schema": {
                            "$ref": "#/definitions/db.ThreatEventAssets"
                        }
                    }
                }
            }
        },
        "/api/frequency": {
            "put": {
                "description": "Edit Frequency",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "3 - Frequency"
                ],
                "summary": "Edit Frequency",
                "parameters": [
                    {
                        "description": "Edit Frequency",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/interfaces.InputFrequency"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Your Frequency is by add",
                        "schema": {
                            "$ref": "#/definitions/db.Frequency"
                        }
                    }
                }
            }
        },
        "/api/frequency/{id}": {
            "get": {
                "description": "Retrieve one Frequency",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "3 - Frequency"
                ],
                "summary": "Retrieve one Frequency",
                "responses": {
                    "200": {
                        "description": "List of One Frequency",
                        "schema": {
                            "$ref": "#/definitions/db.Frequency"
                        }
                    }
                }
            }
        },
        "/api/implementation": {
            "post": {
                "description": "Create New Event Implementation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "8 - Implementation"
                ],
                "summary": "Create New Implementation",
                "parameters": [
                    {
                        "description": "Data for create new Event",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/interfaces.ImplementsInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of All Assets",
                        "schema": {
                            "$ref": "#/definitions/db.ControlLibrary"
                        }
                    }
                }
            }
        },
        "/api/implementation/{id}": {
            "get": {
                "description": "Retrieve an Implementation by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "8 - Implementation"
                ],
                "summary": "Retrieve Implementation by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Implementation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Implementation Details",
                        "schema": {
                            "$ref": "#/definitions/db.ControlLibrary"
                        }
                    }
                }
            }
        },
        "/api/losshigh": {
            "get": {
                "description": "Retrieve and aggregate all LossHigh records",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "5 - Loss-High"
                ],
                "summary": "Retrieve All LossHigh",
                "responses": {
                    "200": {
                        "description": "List of All LossHigh with Aggregated Data",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.LossHigh"
                            }
                        }
                    }
                }
            }
        },
        "/api/losshigh/{id}": {
            "get": {
                "description": "Retrieve an LossHigh by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "5 - Loss-High"
                ],
                "summary": "Retrieve LossHigh by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "LossHigh ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "LossHigh Details",
                        "schema": {
                            "$ref": "#/definitions/db.LossHigh"
                        }
                    }
                }
            }
        },
        "/api/revelance": {
            "get": {
                "description": "Retrieve all Relevance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "9 - Revelance"
                ],
                "summary": "Retrieve All Relevance",
                "responses": {
                    "200": {
                        "description": "List of All Relevance",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Relevance"
                            }
                        }
                    }
                }
            }
        },
        "/api/revelance/{id}": {
            "get": {
                "description": "Retrieve an Revelance by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "9 - Revelance"
                ],
                "summary": "Retrieve Revelance by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Revelance ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Revelance Details",
                        "schema": {
                            "$ref": "#/definitions/db.Relevance"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing Relevance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "9 - Revelance"
                ],
                "summary": "{WIP} Update Relevance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Relevance ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Data to update Relevance",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/interfaces.RelevanceDinamicInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Relevance Updated",
                        "schema": {
                            "$ref": "#/definitions/db.Relevance"
                        }
                    }
                }
            }
        },
        "/api/risk": {
            "get": {
                "description": "Retrieve all Risks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "6 - Risk"
                ],
                "summary": "Retrieve All Risks",
                "responses": {
                    "200": {
                        "description": "List of All Risks",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.RiskCalculation"
                            }
                        }
                    }
                }
            }
        },
        "/api/risk/{id}": {
            "get": {
                "description": "Retrieve an Risk by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "6 - Risk"
                ],
                "summary": "Retrieve Risk by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Threat event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Risk Details",
                        "schema": {
                            "$ref": "#/definitions/db.RiskCalculation"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "db.AggregatedStrength": {
            "type": "object",
            "properties": {
                "current": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "proposed": {
                    "type": "string"
                },
                "threat_event": {
                    "type": "string"
                },
                "threat_id": {
                    "type": "integer"
                }
            }
        },
        "db.AssetInventory": {
            "type": "object",
            "properties": {
                "business_value": {
                    "type": "number"
                },
                "criticality": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "replacement_cost": {
                    "type": "number"
                },
                "responsible": {
                    "type": "string"
                },
                "roleInTargetEnvironment": {
                    "type": "string"
                },
                "users": {
                    "type": "string"
                }
            }
        },
        "db.Control": {
            "type": "object",
            "properties": {
                "aggregate": {
                    "type": "string"
                },
                "aggregateTable": {
                    "type": "string"
                },
                "controlGap": {
                    "type": "string"
                },
                "controlGapTable": {
                    "type": "string"
                },
                "controlId": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "porcent": {
                    "type": "string"
                },
                "type_of_attack": {
                    "type": "string"
                }
            }
        },
        "db.ControlLibrary": {
            "type": "object",
            "properties": {
                "controlReference": {
                    "type": "string"
                },
                "controlType": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "inScope": {
                    "type": "boolean"
                },
                "information": {
                    "type": "string"
                }
            }
        },
        "db.Frequency": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "maxFrequency": {
                    "type": "number"
                },
                "minFrequency": {
                    "type": "number"
                },
                "mostLikelyFrequency": {
                    "type": "number"
                },
                "supportingInformation": {
                    "type": "string"
                },
                "threatEvent": {
                    "type": "string"
                },
                "threatEventID": {
                    "type": "integer"
                }
            }
        },
        "db.LossHigh": {
            "type": "object",
            "properties": {
                "assets": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lossType": {
                    "type": "string"
                },
                "maximumLoss": {
                    "type": "number"
                },
                "minimumLoss": {
                    "type": "number"
                },
                "mostLikelyLoss": {
                    "type": "number"
                },
                "threatEvent": {
                    "type": "string"
                },
                "threatEventID": {
                    "type": "integer"
                }
            }
        },
        "db.Propused": {
            "type": "object",
            "properties": {
                "aggregate": {
                    "type": "string"
                },
                "aggregateTable": {
                    "type": "string"
                },
                "controlGap": {
                    "type": "string"
                },
                "controlGapTable": {
                    "type": "string"
                },
                "controlId": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "porcent": {
                    "type": "string"
                },
                "type_of_attack": {
                    "type": "string"
                }
            }
        },
        "db.Relevance": {
            "type": "object",
            "properties": {
                "controlId": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "porcent": {
                    "type": "integer"
                },
                "type_of_attack": {
                    "type": "string"
                }
            }
        },
        "db.RiskCalculation": {
            "type": "object",
            "properties": {
                "estimate": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "max": {
                    "type": "number"
                },
                "min": {
                    "type": "number"
                },
                "mode": {
                    "type": "number"
                },
                "risk_type": {
                    "type": "string"
                },
                "threat_event": {
                    "type": "string"
                },
                "threat_event_id": {
                    "type": "integer"
                }
            }
        },
        "db.ThreatEventAssets": {
            "type": "object",
            "properties": {
                "affected_asset": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "threat_event": {
                    "type": "string"
                },
                "threat_id": {
                    "type": "integer"
                }
            }
        },
        "db.ThreatEventCatalog": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "inScope": {
                    "type": "boolean"
                },
                "threatEvent": {
                    "type": "string"
                },
                "threatGroup": {
                    "type": "string"
                }
            }
        },
        "interfaces.ImplementsInput": {
            "type": "object",
            "properties": {
                "controlId": {
                    "type": "integer"
                },
                "cost": {
                    "type": "integer"
                },
                "current": {
                    "type": "integer"
                },
                "proposed": {
                    "type": "integer"
                }
            }
        },
        "interfaces.InputAssetsInventory": {
            "type": "object",
            "properties": {
                "business_value": {
                    "type": "number"
                },
                "criticality": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "replacement_cost": {
                    "type": "number"
                },
                "responsible": {
                    "type": "string"
                },
                "roleInTargetEnvironment": {
                    "type": "string"
                },
                "users": {
                    "type": "string"
                }
            }
        },
        "interfaces.InputControlLibrary": {
            "type": "object",
            "properties": {
                "control_reference": {
                    "type": "string"
                },
                "control_type": {
                    "type": "string"
                },
                "in_scope": {
                    "type": "boolean"
                },
                "information": {
                    "type": "string"
                }
            }
        },
        "interfaces.InputFrequency": {
            "type": "object",
            "properties": {
                "max_frequency": {
                    "type": "number"
                },
                "min_frequency": {
                    "type": "number"
                },
                "most_common_frequency": {
                    "type": "number"
                },
                "support_information": {
                    "type": "string"
                },
                "threat_event": {
                    "type": "string"
                },
                "threat_event_id": {
                    "type": "integer"
                }
            }
        },
        "interfaces.InputThreatEventCatalogue": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "in_scope": {
                    "type": "boolean"
                },
                "threat_event": {
                    "type": "string"
                },
                "threat_group": {
                    "type": "string"
                }
            }
        },
        "interfaces.RelevanceDinamicInput": {
            "type": "object",
            "properties": {
                "attributes": {
                    "description": "dynamic attributes",
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "controlId": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Qira",
	Description:      "This is a server for app.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
