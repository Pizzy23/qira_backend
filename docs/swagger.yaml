definitions:
  db.AggregatedStrength:
    properties:
      current:
        type: string
      id:
        type: integer
      proposed:
        type: string
      threat_event:
        type: string
      threat_id:
        type: integer
    type: object
  db.AssetInventory:
    properties:
      business_value:
        type: number
      criticality:
        type: string
      description:
        type: string
      id:
        type: integer
      location:
        type: string
      name:
        type: string
      replacement_cost:
        type: number
      responsible:
        type: string
      roleInTargetEnvironment:
        type: string
      users:
        type: string
    type: object
  db.Control:
    properties:
      aggregate:
        type: string
      controlGap:
        type: string
      controlId:
        type: integer
      id:
        type: integer
      porcent:
        type: string
      type_of_attack:
        type: string
    type: object
  db.ControlLibrary:
    properties:
      controlReference:
        type: string
      controlType:
        type: string
      id:
        type: integer
      inScope:
        type: boolean
      information:
        type: string
    type: object
  db.Frequency:
    properties:
      id:
        type: integer
      maxFrequency:
        type: number
      minFrequency:
        type: number
      mostLikelyFrequency:
        type: number
      supportingInformation:
        type: string
      threatEvent:
        type: string
      threatEventID:
        type: integer
    type: object
  db.LossHigh:
    properties:
      assets:
        type: string
      id:
        type: integer
      lossType:
        type: string
      maximumLoss:
        type: number
      minimumLoss:
        type: number
      mostLikelyLoss:
        type: number
      threatEvent:
        type: string
      threatEventID:
        type: integer
    type: object
  db.LossHighGranular:
    properties:
      assets:
        type: string
      id:
        type: integer
      impact:
        type: string
      lossType:
        type: string
      maximumLoss:
        type: number
      minimumLoss:
        type: number
      mostLikelyLoss:
        type: number
      threatEvent:
        type: string
      threatEventID:
        type: integer
    type: object
  db.Propused:
    properties:
      aggregate:
        type: string
      controlGap:
        type: string
      controlId:
        type: integer
      id:
        type: integer
      porcent:
        type: string
      type_of_attack:
        type: string
    type: object
  db.Relevance:
    properties:
      controlId:
        type: integer
      id:
        type: integer
      porcent:
        type: integer
      type_of_attack:
        type: string
    type: object
  db.RelevanceDinamicInput:
    properties:
      controlId:
        type: integer
      porcent:
        type: integer
      type_of_attack:
        type: string
    type: object
  db.RiskCalculation:
    properties:
      estimate:
        type: number
      id:
        type: integer
      max:
        type: number
      min:
        type: number
      mode:
        type: number
      risk_type:
        description: RiskType pode ser "risk", "loss" ou "Frequencia"
        type: string
      threat_event:
        type: string
      threat_event_id:
        type: integer
    type: object
  db.ThreatEventAssets:
    properties:
      affected_asset:
        type: string
      id:
        type: integer
      threat_event:
        type: string
      threat_id:
        type: integer
    type: object
  db.ThreatEventCatalog:
    properties:
      description:
        type: string
      id:
        type: integer
      inScope:
        type: boolean
      threatEvent:
        type: string
      threatGroup:
        type: string
    type: object
  interfaces.ImplementsInputNoID:
    properties:
      cost:
        type: integer
      current:
        type: integer
      proposed:
        type: integer
    type: object
  interfaces.InputAssetsInventory:
    properties:
      business_value:
        type: number
      criticality:
        type: string
      description:
        type: string
      location:
        type: string
      name:
        type: string
      replacement_cost:
        type: number
      responsible:
        type: string
      roleInTargetEnvironment:
        type: string
      users:
        type: string
    type: object
  interfaces.InputControlLibrary:
    properties:
      control_reference:
        type: string
      control_type:
        type: string
      in_scope:
        type: boolean
      information:
        type: string
    type: object
  interfaces.InputFrequency:
    properties:
      max_frequency:
        type: number
      min_frequency:
        type: number
      most_common_frequency:
        type: number
      support_information:
        type: string
      threat_event:
        type: string
    type: object
  interfaces.InputLossHigh:
    properties:
      assets:
        items:
          type: string
        type: array
      loss_type:
        type: string
      maximum_loss:
        type: number
      minimum_loss:
        type: number
      most_likely_loss:
        type: number
      threat_event:
        type: string
    type: object
  interfaces.InputLossHighGranulade:
    properties:
      assets:
        items:
          type: string
        type: array
      impact:
        type: string
      loss_type:
        type: string
      maximum_loss:
        type: number
      minimum_loss:
        type: number
      most_likely_loss:
        type: number
      threat_event:
        type: string
    type: object
  interfaces.InputThreatEventAssets:
    properties:
      affected_asset:
        items:
          type: string
        type: array
      threat_event:
        type: string
    type: object
  interfaces.InputThreatEventCatalogue:
    properties:
      description:
        type: string
      in_scope:
        type: boolean
      threat_event:
        type: string
      threat_group:
        type: string
    type: object
  interfaces.LossExceedance:
    properties:
      loss:
        type: integer
      risk:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
info:
  contact: {}
  description: This is a server for app.
  title: Qira
  version: "1.0"
paths:
  /api/aggregated-control-strength:
    get:
      consumes:
      - application/json
      description: Retrieve aggregated control strength for all threat events
      produces:
      - application/json
      responses:
        "200":
          description: List of Aggregated Control Strength
          schema:
            items:
              $ref: '#/definitions/db.AggregatedStrength'
            type: array
      summary: '{WIP} Retrieve Aggregated Control Strength'
      tags:
      - 12 - Aggregated Control
  /api/all-catalogue:
    get:
      consumes:
      - application/json
      description: Retrieve all Event
      produces:
      - application/json
      responses:
        "200":
          description: List of All Event
          schema:
            $ref: '#/definitions/db.ThreatEventCatalog'
      summary: Retrieve All Catalogue
      tags:
      - 2 - Catalogue
  /api/all-control:
    get:
      consumes:
      - application/json
      description: Retrieve all Event
      produces:
      - application/json
      responses:
        "200":
          description: List of All Event
          schema:
            $ref: '#/definitions/db.ControlLibrary'
      summary: Retrieve All Control
      tags:
      - 7 - Control
  /api/all-event:
    get:
      consumes:
      - application/json
      description: Event
      produces:
      - application/json
      responses:
        "200":
          description: Your Frequency is by add
          schema:
            $ref: '#/definitions/db.ThreatEventAssets'
      summary: Event
      tags:
      - 4 - Event
  /api/all-frequency:
    get:
      consumes:
      - application/json
      description: Retrieve all Event
      produces:
      - application/json
      responses:
        "200":
          description: List of All Frequency
          schema:
            items:
              $ref: '#/definitions/db.Frequency'
            type: array
      summary: Retrieve All Frequency
      tags:
      - 3 - Frequency
  /api/all-implementation:
    get:
      consumes:
      - application/json
      description: Retrieve all Implementation
      produces:
      - application/json
      responses:
        "200":
          description: List of All Implementation
          schema:
            $ref: '#/definitions/db.ControlLibrary'
      summary: Retrieve All Implementation
      tags:
      - 8 - Implementation
  /api/all-proposed:
    get:
      consumes:
      - application/json
      description: Retrieve all Control Proposed
      produces:
      - application/json
      responses:
        "200":
          description: List of All Control Strength
          schema:
            items:
              $ref: '#/definitions/db.Propused'
            type: array
      summary: '{WIP} Retrieve All Control Proposed'
      tags:
      - 11 - Control Proposed
  /api/all-prupu:
    get:
      consumes:
      - application/json
      description: Retrieve all Event
      produces:
      - application/json
      responses:
        "200":
          description: List of All Event
          schema:
            $ref: '#/definitions/db.ControlLibrary'
      summary: Retrieve All Control
      tags:
      - 11 - Control Proposed
  /api/all-stren:
    get:
      consumes:
      - application/json
      description: Retrieve all Event
      produces:
      - application/json
      responses:
        "200":
          description: List of All Event
          schema:
            $ref: '#/definitions/db.ControlLibrary'
      summary: Retrieve All Control
      tags:
      - 10 - Control Strength
  /api/all-strength:
    get:
      consumes:
      - application/json
      description: Retrieve all Control Strength
      produces:
      - application/json
      responses:
        "200":
          description: List of All Control Strength
          schema:
            items:
              $ref: '#/definitions/db.Control'
            type: array
      summary: '{WIP} Retrieve All Control Strength'
      tags:
      - 10 - Control Strength
  /api/asset/{id}:
    delete:
      consumes:
      - application/json
      description: Update an existing Asset
      parameters:
      - description: Asset ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Asset Updated
          schema:
            $ref: '#/definitions/db.AssetInventory'
      summary: Delete Asset
      tags:
      - 1 - Inventory
    get:
      consumes:
      - application/json
      description: Retrieve an asset by its ID
      parameters:
      - description: Asset ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Asset Details
          schema:
            $ref: '#/definitions/db.AssetInventory'
      summary: Retrieve Asset by ID
      tags:
      - 1 - Inventory
    put:
      consumes:
      - application/json
      description: Update an existing Asset
      parameters:
      - description: Asset ID
        in: path
        name: id
        required: true
        type: integer
      - description: Data to update Asset
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/interfaces.InputAssetsInventory'
      produces:
      - application/json
      responses:
        "200":
          description: Asset Updated
          schema:
            $ref: '#/definitions/db.AssetInventory'
      summary: Update Asset
      tags:
      - 1 - Inventory
  /api/assets:
    get:
      consumes:
      - application/json
      description: Retrieve all assets
      produces:
      - application/json
      responses:
        "200":
          description: List of All Assets
          schema:
            items:
              $ref: '#/definitions/db.AssetInventory'
            type: array
      summary: Retrieve All Assets
      tags:
      - 1 - Inventory
  /api/catalogue:
    post:
      consumes:
      - application/json
      description: Create New Event Catalogue
      parameters:
      - description: Data for create new Event
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/interfaces.InputThreatEventCatalogue'
      produces:
      - application/json
      responses:
        "200":
          description: List of All Events catalogues
          schema:
            $ref: '#/definitions/db.ThreatEventCatalog'
      summary: '{WIP} Create New Catalogue'
      tags:
      - 2 - Catalogue
  /api/catalogue/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an Event by its ID
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Event Details
          schema:
            $ref: '#/definitions/db.ThreatEventCatalog'
      summary: Delete Catalogue by ID
      tags:
      - 2 - Catalogue
    get:
      consumes:
      - application/json
      description: Retrieve an Event by its ID
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Event Details
          schema:
            $ref: '#/definitions/db.ThreatEventCatalog'
      summary: Retrieve Catalogue by ID
      tags:
      - 2 - Catalogue
  /api/control:
    post:
      consumes:
      - application/json
      description: Create Controll
      parameters:
      - description: Data for create new Control
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/interfaces.InputControlLibrary'
      produces:
      - application/json
      responses:
        "200":
          description: List of All Assets
          schema:
            $ref: '#/definitions/db.ControlLibrary'
      summary: Update Controll
      tags:
      - 7 - Control
  /api/control/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an Event by its ID
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Event Details
          schema:
            $ref: '#/definitions/db.ControlLibrary'
      summary: Delete Control by ID
      tags:
      - 7 - Control
    get:
      consumes:
      - application/json
      description: Retrieve an Event by its ID
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Event Details
          schema:
            $ref: '#/definitions/db.ControlLibrary'
      summary: Retrieve Control by ID
      tags:
      - 7 - Control
    put:
      consumes:
      - application/json
      description: Create Controll
      parameters:
      - description: Control Id
        in: path
        name: id
        required: true
        type: integer
      - description: Data for update new control
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/interfaces.InputControlLibrary'
      produces:
      - application/json
      responses:
        "200":
          description: List of All Assets
          schema:
            $ref: '#/definitions/db.ControlLibrary'
      summary: Update Controll
      tags:
      - 7 - Control
  /api/create-asset:
    post:
      consumes:
      - application/json
      description: Create new Asset
      parameters:
      - description: Data for create new Asset
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/interfaces.InputAssetsInventory'
      produces:
      - application/json
      responses:
        "200":
          description: Asset Create
          schema:
            $ref: '#/definitions/db.AssetInventory'
      summary: Create Asset
      tags:
      - 1 - Inventory
  /api/create-loss:
    put:
      consumes:
      - application/json
      description: Create new LossHigh Specific
      parameters:
      - description: Tipo de loss
        enum:
        - '"Singular"'
        - '"LossHigh"'
        - '"Granular"'
        in: header
        name: Loss
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: LossHigh Create
          schema:
            $ref: '#/definitions/db.LossHigh'
      summary: Create LossHigh Specific
      tags:
      - 5 - Loss-High
  /api/event/{id}:
    put:
      consumes:
      - application/json
      description: Create Event
      parameters:
      - description: Threat Event ID
        in: path
        name: id
        required: true
        type: integer
      - description: Data for create new Event
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/interfaces.InputThreatEventAssets'
      produces:
      - application/json
      responses:
        "200":
          description: Event created successfully
          schema:
            $ref: '#/definitions/db.ThreatEventAssets'
      summary: Create Event
      tags:
      - 4 - Event
  /api/frequency/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve one Frequency
      produces:
      - application/json
      responses:
        "200":
          description: List of One Frequency
          schema:
            $ref: '#/definitions/db.Frequency'
      summary: Retrieve one Frequency
      tags:
      - 3 - Frequency
    put:
      consumes:
      - application/json
      description: Edit Frequency
      parameters:
      - description: Threat Event ID
        in: path
        name: id
        required: true
        type: integer
      - description: Edit Frequency
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/interfaces.InputFrequency'
      produces:
      - application/json
      responses:
        "200":
          description: Your Frequency is by add
          schema:
            $ref: '#/definitions/db.Frequency'
      summary: Edit Frequency
      tags:
      - 3 - Frequency
  /api/implementation/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve an Implementation by its ID
      parameters:
      - description: Implementation ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Implementation Details
          schema:
            $ref: '#/definitions/db.ControlLibrary'
      summary: Retrieve Implementation by ID
      tags:
      - 8 - Implementation
    put:
      consumes:
      - application/json
      description: Create New Event Implementation
      parameters:
      - description: Control Id
        in: path
        name: id
        required: true
        type: integer
      - description: Data for create new Event
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/interfaces.ImplementsInputNoID'
      produces:
      - application/json
      responses:
        "200":
          description: List of All Assets
          schema:
            $ref: '#/definitions/db.ControlLibrary'
      summary: Create New Implementation
      tags:
      - 8 - Implementation
  /api/losshigh:
    get:
      consumes:
      - application/json
      description: Retrieve and aggregate all LossHigh records
      produces:
      - application/json
      responses:
        "200":
          description: List of All LossHigh with Aggregated Data
          schema:
            items:
              $ref: '#/definitions/db.LossHigh'
            type: array
      summary: Retrieve All LossHigh
      tags:
      - 5 - Loss-High
  /api/losshigh-granuled:
    get:
      consumes:
      - application/json
      description: Retrieve and aggregate all LossHigh records
      produces:
      - application/json
      responses:
        "200":
          description: List of All LossHigh with Aggregated Data
          schema:
            items:
              $ref: '#/definitions/db.LossHighGranular'
            type: array
      summary: Retrieve All LossHigh Granuled
      tags:
      - 5 - Loss-High
  /api/losshigh-singular:
    get:
      consumes:
      - application/json
      description: Retrieve and aggregate all LossHigh records
      produces:
      - application/json
      responses:
        "200":
          description: List of All LossHigh with Aggregated Data
          schema:
            items:
              $ref: '#/definitions/db.LossHigh'
            type: array
      summary: Retrieve All LossHigh Singular
      tags:
      - 5 - Loss-High
  /api/losshigh/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve an LossHigh by its ID
      parameters:
      - description: LossHigh ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: LossHigh Details
          schema:
            $ref: '#/definitions/db.LossHigh'
      summary: Retrieve LossHigh by ID
      tags:
      - 5 - Loss-High
  /api/revelance:
    get:
      consumes:
      - application/json
      description: Retrieve all Relevance
      produces:
      - application/json
      responses:
        "200":
          description: List of All Relevance
          schema:
            items:
              $ref: '#/definitions/db.Relevance'
            type: array
      summary: Retrieve All Relevance
      tags:
      - 9 - Revelance
  /api/revelance/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve an Revelance by its ID
      parameters:
      - description: Revelance ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Revelance Details
          schema:
            $ref: '#/definitions/db.Relevance'
      summary: Retrieve Revelance by ID
      tags:
      - 9 - Revelance
  /api/risk:
    get:
      consumes:
      - application/json
      description: Retrieve all Risks
      parameters:
      - description: Tipo de loss
        enum:
        - '"Singular"'
        - '"LossHigh"'
        - '"Granular"'
        in: header
        name: Loss
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of All Risks
          schema:
            items:
              $ref: '#/definitions/db.RiskCalculation'
            type: array
      summary: Retrieve All Risks
      tags:
      - 6 - Risk
  /api/risk/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve an Risk by its ID
      parameters:
      - description: Threat event ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Risk Details
          schema:
            $ref: '#/definitions/db.RiskCalculation'
      summary: Retrieve Risk by ID
      tags:
      - 6 - Risk
  /api/update-losshigh-granuled/{id}:
    put:
      consumes:
      - application/json
      description: Create new LossHigh
      parameters:
      - description: Threat Event ID
        in: path
        name: id
        required: true
        type: integer
      - description: Data for create new LossHigh
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/interfaces.InputLossHighGranulade'
      produces:
      - application/json
      responses:
        "200":
          description: LossHigh Create
          schema:
            $ref: '#/definitions/db.LossHigh'
      summary: Create LossHigh Granuled
      tags:
      - 5 - Loss-High
  /api/update-losshigh-singular/{id}:
    put:
      consumes:
      - application/json
      description: Create new LossHigh
      parameters:
      - description: Threat Event ID
        in: path
        name: id
        required: true
        type: integer
      - description: Data for create new LossHigh
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/interfaces.InputLossHigh'
      produces:
      - application/json
      responses:
        "200":
          description: LossHigh Create
          schema:
            $ref: '#/definitions/db.LossHigh'
      summary: Create LossHigh Singular
      tags:
      - 5 - Loss-High
  /api/update-losshigh/{id}:
    put:
      consumes:
      - application/json
      description: Create new LossHigh
      parameters:
      - description: Threat Event ID
        in: path
        name: id
        required: true
        type: integer
      - description: Data for create new LossHigh
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/interfaces.InputLossHigh'
      produces:
      - application/json
      responses:
        "200":
          description: LossHigh Create
          schema:
            $ref: '#/definitions/db.LossHigh'
      summary: Create LossHigh
      tags:
      - 5 - Loss-High
  /api/update-revelance:
    put:
      consumes:
      - application/json
      description: Create new Relevance
      parameters:
      - description: Data for create new Relevance
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/db.RelevanceDinamicInput'
      produces:
      - application/json
      responses:
        "200":
          description: Relevance Create
          schema:
            $ref: '#/definitions/db.Relevance'
      summary: Update Relevance
      tags:
      - 9 - Revelance
  /api/upload-appetite:
    put:
      consumes:
      - application/json
      description: Test for simulation appetite
      parameters:
      - description: Loss Exceedance Graph
        in: body
        name: request
        required: true
        schema:
          items:
            $ref: '#/definitions/interfaces.LossExceedance'
          type: array
      produces:
      - application/json
      responses: {}
      summary: Test for simulation appetite
      tags:
      - 13 - Simulation
  /simulation:
    get:
      consumes:
      - application/json
      description: Test for simulation
      parameters:
      - description: 'Threat Event '
        in: header
        name: threatEvent
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Test for simulation
      tags:
      - 13 - Simulation
  /simulation-aggregated:
    get:
      consumes:
      - application/json
      description: Test for simulation aggregated
      produces:
      - application/json
      responses: {}
      summary: Test for simulation aggregated
      tags:
      - 13 - Simulation
  /simulation-appetite:
    get:
      consumes:
      - application/json
      description: Test for simulation appetite
      produces:
      - application/json
      responses: {}
      summary: Test for simulation appetite
      tags:
      - 13 - Simulation
  /simulation-report:
    get:
      consumes:
      - application/json
      description: Test for simulation
      parameters:
      - description: 'Threat Event '
        in: header
        name: threatEvent
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Test for simulation
      tags:
      - 13 - Simulation
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
